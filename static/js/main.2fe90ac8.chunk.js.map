{"version":3,"sources":["Feedback/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["Feedback","state","good","neutral","bad","clickGood","setState","prevState","clickNeutral","clickBad","className","type","id","onClick","this","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAiEeA,E,4MA7DbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,UAAY,WACV,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLL,KAAMK,EAAUL,KAAO,O,EAK7BM,aAAe,WACb,EAAKF,UAAS,SAAAC,GACZ,MAAO,CACLJ,QAASI,EAAUJ,QAAU,O,EAKnCM,SAAW,WACT,EAAKH,UAAS,SAAAC,GACZ,MAAO,CACLH,IAAKG,EAAUH,IAAM,O,4CAK3B,WACE,OACE,sBAAKM,UAAU,WAAf,UACE,mBAAGA,UAAU,gBAAb,qCACA,sBAAKA,UAAU,0BAAf,UACE,wBAAQC,KAAK,SAASC,GAAG,IAAIF,UAAU,iBAAiBG,QAASC,KAAKT,UAAtE,kBAGA,wBAAQM,KAAK,SAASC,GAAG,IAAIF,UAAU,iBAAiBG,QAASC,KAAKN,aAAtE,qBAGA,wBAAQG,KAAK,SAASC,GAAG,IAAIF,UAAU,iBAAiBG,QAASC,KAAKL,SAAtE,oBAIF,sBAAKC,UAAU,oBAAf,UACE,mBAAGA,UAAU,yBAAb,yBACA,qBAAKA,UAAU,4BAAf,SACE,qBAAIA,UAAU,wBAAd,UACE,qBAAIA,UAAU,wBAAd,oBAA8CI,KAAKb,MAAMC,KAAzD,OACA,qBAAIQ,UAAU,wBAAd,uBAAiDI,KAAKb,MAAME,WAC5D,qBAAIO,UAAU,wBAAd,mBAA6CI,KAAKb,MAAMG,OACxD,oBAAIM,UAAU,wBAAd,iD,GArDSK,IAAMC,WCAd,SAASC,IACtB,OACE,8BACE,cAAC,EAAD,MCNN,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2fe90ac8.chunk.js","sourcesContent":["import React from 'react';\nimport './Feedback.css';\n\nclass Feedback extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  clickGood = () => {\n    this.setState(prevState => {\n      return {\n        good: prevState.good + 1,\n      };\n    });\n  };\n\n  clickNeutral = () => {\n    this.setState(prevState => {\n      return {\n        neutral: prevState.neutral + 1,\n      };\n    });\n  };\n\n  clickBad = () => {\n    this.setState(prevState => {\n      return {\n        bad: prevState.bad + 1,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"Feedback\">\n        <p className=\"FeedbackTitle\"> Please Leave feedback </p>\n        <div className=\"FeedbackButtonContainer\">\n          <button type=\"button\" id=\"1\" className=\"FeedbackButton\" onClick={this.clickGood}>\n            Good\n          </button>\n          <button type=\"button\" id=\"2\" className=\"FeedbackButton\" onClick={this.clickNeutral}>\n            Neutral\n          </button>\n          <button type=\"button\" id=\"3\" className=\"FeedbackButton\" onClick={this.clickBad}>\n            Bad\n          </button>\n        </div>\n        <div className=\"FeedbackStatistic\">\n          <p className=\"FeedbackStatisticTitle\"> Statistic </p>\n          <div className=\"FeedbackStatisticSynopsis\">\n            <ul className=\"FeedbackStatisticList\">\n              <li className=\"FeedbackStatisticItem\"> Good: {this.state.good} </li>\n              <li className=\"FeedbackStatisticItem\"> Neutral: {this.state.neutral}</li>\n              <li className=\"FeedbackStatisticItem\"> Bad: {this.state.bad}</li>\n              <li className=\"FeedbackStatisticItem\"> Positive feedback: </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import './App.css';\nimport Feedback from './Feedback/Feedback';\n\nexport default function App() {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}